{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Nessie Airflow Provider \u00b6 Documentation : https://projectnessie.github.io/nessie_provider Source Code : https://github.com/projectnessie/nessie_provider Usage \u00b6 To use in airflow install via pip pip install airflow-provider-nessie . See Nessie Documentation for instructions on starting and using a Nessie server. Operators and Hooks \u00b6 To interact with Nessie from an airflow DAG you have the following options: Nessie Hook: register as a connection w/ Airflow and store your Nessie url and credentials Create reference operator: Create a Branch or Tag as part of an airflow DAG Delete reference operator: Delete a Branch or Tag as part of an airflow DAG Commit operator: commit objects to the Nessie database on a given branch Merge operator: merge one branch into another These can be seen in action by looking at the Example DAGs . The basic_nessie.py DAG shows each operator in action and the spark_nessie_iceberg.py DAG shows a more complicated example of performing an iceberg transaction in Nessie from the Spark operator. Development \u00b6 Setup environement \u00b6 You should have Pipenv installed. Then, you can install the dependencies with: pipenv install --dev After that, activate the virtual environment: pipenv shell Run unit tests \u00b6 You can run all the tests with: make test Alternatively, you can run pytest yourself: pytest Format the code \u00b6 Execute the following command to apply isort and black formatting: make format License \u00b6 This project is licensed under the terms of the Apache Software License 2.0.","title":"About"},{"location":"#nessie-airflow-provider","text":"Documentation : https://projectnessie.github.io/nessie_provider Source Code : https://github.com/projectnessie/nessie_provider","title":"Nessie Airflow Provider"},{"location":"#usage","text":"To use in airflow install via pip pip install airflow-provider-nessie . See Nessie Documentation for instructions on starting and using a Nessie server.","title":"Usage"},{"location":"#operators-and-hooks","text":"To interact with Nessie from an airflow DAG you have the following options: Nessie Hook: register as a connection w/ Airflow and store your Nessie url and credentials Create reference operator: Create a Branch or Tag as part of an airflow DAG Delete reference operator: Delete a Branch or Tag as part of an airflow DAG Commit operator: commit objects to the Nessie database on a given branch Merge operator: merge one branch into another These can be seen in action by looking at the Example DAGs . The basic_nessie.py DAG shows each operator in action and the spark_nessie_iceberg.py DAG shows a more complicated example of performing an iceberg transaction in Nessie from the Spark operator.","title":"Operators and Hooks"},{"location":"#development","text":"","title":"Development"},{"location":"#setup-environement","text":"You should have Pipenv installed. Then, you can install the dependencies with: pipenv install --dev After that, activate the virtual environment: pipenv shell","title":"Setup environement"},{"location":"#run-unit-tests","text":"You can run all the tests with: make test Alternatively, you can run pytest yourself: pytest","title":"Run unit tests"},{"location":"#format-the-code","text":"Execute the following command to apply isort and black formatting: make format","title":"Format the code"},{"location":"#license","text":"This project is licensed under the terms of the Apache Software License 2.0.","title":"License"}]}